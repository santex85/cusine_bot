from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext
from loader import db, bot
from states.user_mode_state import UserModeState
from keyboards.inline.categories import CategoryCallbackFactory # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from keyboards.default.markups import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

router = Router()

# --- –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ ---
SETTINGS_TEXT = '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞'
ORDERS_TEXT = 'üìà –ó–∞–∫–∞–∑—ã'
NOTIFICATIONS_TEXT = 'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
QUESTIONS_TEXT = '‚ùì –í–æ–ø—Ä–æ—Å—ã'


@router.message(F.text == SETTINGS_TEXT, UserModeState.ADMIN)
async def process_settings(message: types.Message, state: FSMContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–≤–∞—Ä–æ–≤.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    categories = db.fetchall('SELECT * FROM categories')
    buttons = [
        [InlineKeyboardButton(
            text=title,
            callback_data=CategoryCallbackFactory(id=idx, action='view').pack()
        )] for idx, title in categories
    ]
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
    buttons.append([
        InlineKeyboardButton(
            text='+ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
            callback_data='add_category' # –ü—Ä–æ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∞, –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –µ–µ –≤ add.py
        )
    ])
    
    markup = InlineKeyboardMarkup(inline_keyboard=buttons)
    await message.answer('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', reply_markup=markup)

# –î—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é (–∑–∞–≥–ª—É—à–∫–∏)
@router.message(F.text == ORDERS_TEXT, UserModeState.ADMIN)
async def process_orders(message: types.Message):
    await message.answer('–†–∞–∑–¥–µ–ª "–ó–∞–∫–∞–∑—ã" –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.')

@router.message(F.text == NOTIFICATIONS_TEXT, UserModeState.ADMIN)
async def process_notifications(message: types.Message):
    await message.answer('–†–∞–∑–¥–µ–ª "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.')

@router.message(F.text == QUESTIONS_TEXT, UserModeState.ADMIN)
async def process_questions(message: types.Message):
    await message.answer('–†–∞–∑–¥–µ–ª "–í–æ–ø—Ä–æ—Å—ã" –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.')
