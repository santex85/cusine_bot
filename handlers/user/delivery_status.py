from aiogram import Router, F, types
from loader import db
from states.user_mode_state import UserModeState

router = Router()

@router.message(F.text == 'üöö –°—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏', UserModeState.USER)
async def process_delivery_status(message: types.Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏—Å—Ç–æ—Ä–∏—é –µ–≥–æ –∑–∞–∫–∞–∑–æ–≤.
    """
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º
    orders = db.fetchall(
        'SELECT rowid, products, status FROM orders WHERE cid = ? ORDER BY rowid DESC',
        (user_id,)
    )

    if not orders:
        await message.answer("–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
        return

    await message.answer("<b>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:</b>")
    
    for order_id, products, status in orders:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥
        products_list = products.replace('; ', '- ')
        text = (
            f"<b>–ó–∞–∫–∞–∑ ‚Ññ{order_id}</b>"
            f"<b>–°—Ç–∞—Ç—É—Å:</b> {status.capitalize()}"
            f"<b>–°–æ—Å—Ç–∞–≤:</b>- {products_list}")
        await message.answer(text)
